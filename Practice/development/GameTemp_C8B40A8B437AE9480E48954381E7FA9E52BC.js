// Generated by CoffeeScript 1.12.7
(function() {
  var GameTemp;

  GameTemp = (function() {

    /**
    * The GameTemp holds the temporary data of the currently running game like currently displayed
    * choices, choice timer, etc. The GameTemp is written to the save-game as well.
    *
    * @module gs
    * @class GameTemp
    * @memberof gs
    * @constructor
    * @param {Object} data - An optional data-bundle to initialize the game-temp from.
     */
    function GameTemp(data) {

      /**
      * Stores the current choice timer.
      *
      * @property choiceTimer
      * @type gs.Object_Timer
       */
      this.choiceTimer = null;
      this.restore(data);
    }


    /**
    * Stores the current choices.
    *
    * @property choices
    * @type Object[]
     */

    GameTemp.accessors("choices", {
      set: function(choices) {
        return SceneManager.scene.choices = choices;
      },
      get: function() {
        return SceneManager.scene.choices;
      }
    });


    /**
    * Serializes the game-temp into a data-bundle.
    *
    * @method toDataBundle
    * @return {Object} A data-bundle which can be serialized to JSON.
     */

    GameTemp.prototype.toDataBundle = function() {
      var bundle, ref;
      bundle = {};
      Object.mixin(bundle, this);
      bundle.choiceTimer = (ref = this.choiceTimer) != null ? ref.toDataBundle() : void 0;
      return bundle;
    };


    /**
    * Restores the game-temp from a data-bundle.
    *
    * @method restore
    * @param {Object} data - A data-bundle to restore the game-temp from.
     */

    GameTemp.prototype.restore = function(data) {
      if (!data) {
        return;
      }
      Object.mixin(this, data);
      if (data.choiceTimer) {
        return this.choiceTimer = new gs.Object_Timer(data.choiceTimer);
      }
    };


    /**
    * Clears the game temp.
    *
    * @method clear
     */

    GameTemp.prototype.clear = function() {
      return Object.keys(this).forEach((function(_this) {
        return function(x) {
          return delete _this[x];
        };
      })(this));
    };

    return GameTemp;

  })();

  gs.GameTemp = GameTemp;

}).call(this);
