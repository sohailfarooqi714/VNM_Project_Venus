// Generated by CoffeeScript 1.12.7
(function() {
  var Component_Animation,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Component_Animation = (function(superClass) {
    extend(Component_Animation, superClass);


    /**
    * The base-class of all animation components. An animation-component
    * executes a certain animation on a game object. The type of the animation depends
    * on the component. <br>
    * <br>
    * In regular, animation components a used together with the gs.Component_Animator
    * component.
    *
    * @module gs
    * @class Component_Animation
    * @extends gs.Component
    * @memberof gs
    * @constructor
     */

    function Component_Animation() {
      Component_Animation.__super__.constructor.apply(this, arguments);
      this.name = "animation";
    }


    /**
    * Updates the animation. 
    *
    * @method update
     */

    Component_Animation.prototype.update = function() {
      return this.object.needsFullUpdate = true;
    };


    /**
    * Skips the animation. That is used to skip an animation if the user
    * wants to skip very fast through a visual novel scene.
    *
    * @method skip
     */

    Component_Animation.prototype.skip = function() {
      var ref;
      if (((ref = this.easing) != null ? ref.duration : void 0) > GameManager.tempSettings.skipTime) {
        if (GameManager.tempSettings.skipTime === 0) {
          return this.easing.time = this.easing.duration;
        } else {
          this.easing.duration = GameManager.tempSettings.skipTime;
          return this.easing.time = 0;
        }
      }
    };


    /**
    * Indicates if instant-skipping is enabled. In that case, there shouldn't be any delay and animation
    * must finish immediately and call its callback. It is mostly used for live-preview purposes.
    *
    * @method isInstantSkip
    * @return {boolean} If <b>true</b>, instant-skipping is enabled. Otherwise <b>false</b>.
     */

    Component_Animation.prototype.isInstantSkip = function() {
      return GameManager.tempSettings.skip && GameManager.tempSettings.skipTime === 0;
    };

    return Component_Animation;

  })(gs.Component);

  gs.Component_Animation = Component_Animation;

}).call(this);
