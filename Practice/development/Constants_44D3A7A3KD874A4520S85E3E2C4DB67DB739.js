// Generated by CoffeeScript 1.12.7
(function() {
  var DesktopUIConstants, Helper;

  DesktopUIConstants = (function() {
    function DesktopUIConstants() {}

    DesktopUIConstants.OPTION_BUTTON_W = 78;

    DesktopUIConstants.OPTION_BUTTON_H = 78;

    DesktopUIConstants.OPTION_BUTTON_L_IMAGE_ON = "m-diamond-large-on";

    DesktopUIConstants.OPTION_BUTTON_L_IMAGE_OFF = "m-diamond-large-off";

    DesktopUIConstants.OPTION_BUTTON_S_IMAGE_ON = "m-diamond-small-on";

    DesktopUIConstants.OPTION_BUTTON_S_IMAGE_OFF = "m-diamond-small-off";

    DesktopUIConstants.OPTION_BUTTON_MSG_IMAGE_ON = "msg-diamond-small-on";

    DesktopUIConstants.OPTION_BUTTON_MSG_IMAGE_OFF = "msg-diamond-small-off";

    DesktopUIConstants.SLIDER_TRACK_H = 3;

    DesktopUIConstants.TEXT_SIZE_SMALL = 20;

    DesktopUIConstants.TEXT_SIZE_MESSAGE = 30;

    DesktopUIConstants.TEXT_SIZE_MESSAGE_NAME = 25;

    DesktopUIConstants.LAYOUT_SETTINGS_WINDOW_X = 20;

    DesktopUIConstants.LAYOUT_SETTINGS_WINDOW_W = 630;

    DesktopUIConstants.LAYOUT_SETTINGS_VOICES_WINDOW_X = 720;

    DesktopUIConstants.LAYOUT_SETTINGS_VOICES_WINDOW_W = 540;

    DesktopUIConstants.LAYOUT_SETTINGS_WINDOW_LABEL_W = 80;

    DesktopUIConstants.CG_GALLERY_CONTENT_WIDTH = Math.floor((Graphics.width - 260 - (Graphics.width - (Graphics.width - 200))) / 175) * 175 + 20;

    DesktopUIConstants.MESSAGE_BOX_IDS = ["messageBox", "nvlMessageBox"];

    return DesktopUIConstants;

  })();

  Helper = (function() {

    /**
    * A helper class containing helper-functions like generating letter-descriptors
    * from database defined text-input pages.
    *
    * @module ui
    * @class Helper
    * @memberof ui
    * @constructor
     */
    function Helper() {}


    /**
    * Generates the text-input pages from database.
    *
    * @method generateTextInputPages
    * @return Object[] - Array of text-input pages. Each page is an array of ui.Letter descriptors.
     */

    Helper.prototype.generateTextInputPages = function() {
      var charset, charsets, defaults, i, j, k, len, pages, ref, ref1;
      pages = [];
      defaults = ["ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", "0123456789", ""];
      try {
        charsets = RecordManager.system.textInputPages.select(function(p) {
          return lcs(p);
        });
      } catch (error) {
        charsets = defaults;
      }
      for (i = j = 0, ref = charsets.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
        charsets[i] = (ref1 = charsets[i]) != null ? ref1 : defaults[i] || "";
      }
      for (k = 0, len = charsets.length; k < len; k++) {
        charset = charsets[k];
        pages.push(this.generateTextInputPage(charset));
      }
      return pages;
    };


    /**
    * Generates an array of ui.Letter descriptors from the specified charset.
    *
    * @method generateTextInputPage
    * @param {string} charset - The charset to generate the ui.Letter descriptors from.
    * @return Object[] - Array of ui.Letter descriptors.
     */

    Helper.prototype.generateTextInputPage = function(charset) {
      var c, controls, j, len, letter;
      controls = [];
      for (j = 0, len = charset.length; j < len; j++) {
        c = charset[j];
        letter = {
          "type": "ui.Letter",
          "params": {
            "text": c,
            "target": new ui.Formula(function() {
              return 'textField.textInput';
            })
          }
        };
        controls.push(letter);
      }
      return controls;
    };

    return Helper;

  })();

  ui.Helper = new Helper();

  gs.DesktopUIConstants = DesktopUIConstants;

  gs.UIConstants = DesktopUIConstants;

}).call(this);
