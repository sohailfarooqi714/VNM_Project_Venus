
/**
* Holds different easing types and helper methods.
*
* @module gs
* @class Easings
* @memberof gs
* @constructor
 */
var Easings;

Easings = (function() {
  function Easings() {}

  Easings.initialize = function() {

    /**
    * Contains all easing functions by type and in/out.
    * @property EASE_FUNCTIONS
    * @type Function[][]
    * @static
    * @final
     */
    this.EASE_FUNCTIONS = [[Math.linearTween, Math.linearTween, Math.linearTween], [Math.easeOutQuad, Math.easeInQuad, Math.easeInOutQuad], [Math.easeOutCubic, Math.easeInCubic, Math.easeInOutCubic], [Math.easeOutQuart, Math.easeInQuart, Math.easeInOutQuart], [Math.easeOutQuint, Math.easeInQuint, Math.easeInOutQuint], [Math.easeOutSine, Math.easeInSine, Math.easeInOutSine], [Math.easeOutExpo, Math.easeInExpo, Math.easeInOutExpo], [Math.easeOutCirc, Math.easeInCirc, Math.easeInOutCirc], [Math.easeOutElastic, Math.easeInElastic, Math.easeInOutElastic], [Math.easeOutBounce, Math.easeInBounce, Math.easeInOutBounce], [Math.easeOutBack, Math.easeInBack, Math.easeInOutBack]];

    /**
    * @property BY_INDEX
    * @type number[][]
    * @static
    * @final
     */
    this.BY_INDEX = [[[0, 0], [0, 0], [0, 0]], [[1, 0], [1, 1], [1, 2]], [[2, 0], [2, 1], [2, 2]], [[3, 0], [3, 1], [3, 2]], [[4, 0], [4, 1], [4, 2]], [[5, 0], [5, 1], [5, 2]], [[6, 0], [6, 1], [6, 2]], [[7, 0], [7, 1], [7, 2]], [[8, 0], [8, 1], [8, 2]], [[9, 0], [9, 1], [9, 2]], [[10, 0], [10, 1], [10, 2]]];

    /**
    * @property BY_STRING
    * @type Object
    * @static
    * @final
     */
    this.BY_STRING = {
      "linear_in": [0, 0],
      "linear_out": [0, 0],
      "linear_inout": [0, 0],
      "quad_out": [1, 0],
      "quad_in": [1, 1],
      "quad_inout": [1, 2],
      "cubic_out": [2, 0],
      "cubic_in": [2, 1],
      "cubic_inout": [2, 2],
      "quart_out": [3, 0],
      "quart_in": [3, 1],
      "quart_inout": [3, 2],
      "quint_out": [4, 0],
      "quint_in": [4, 1],
      "quint_inout": [4, 2],
      "sine_out": [5, 0],
      "sine_in": [5, 1],
      "sine_inout": [5, 2],
      "expo_out": [6, 0],
      "expo_in": [6, 1],
      "expo_inout": [6, 2],
      "circ_out": [7, 0],
      "circ_in": [7, 1],
      "circ_inout": [7, 2],
      "elastic_out": [8, 0],
      "elastic_in": [8, 1],
      "elastic_inout": [8, 2],
      "bounce_out": [9, 0],
      "bounce_in": [9, 1],
      "bounce_inout": [9, 2],
      "back_out": [10, 0],
      "back_in": [10, 1],
      "back_inout": [10, 2]
    };

    /**
    * @property EASE_LINEAR
    * @type number[][]
    * @static
    * @final
     */
    this.EASE_LINEAR = this.BY_INDEX[gs.EasingTypes.EASE_LINEAR];

    /**
    * @property EASE_QUADRATIC
    * @type number[][]
    * @static
    * @final
     */
    this.EASE_QUADRATIC = this.BY_INDEX[gs.EasingTypes.EASE_QUADRATIC];

    /**
    * @property EASE_CUBIC
    * @type number[][]
    * @static
    * @final
     */
    this.EASE_CUBIC = this.BY_INDEX[gs.EasingTypes.EASE_CUBIC];

    /**
    * @property EASE_QUARTIC
    * @type number[][]
    * @static
    * @final
     */
    this.EASE_QUARTIC = this.BY_INDEX[gs.EasingTypes.EASE_QUARTIC];

    /**
    * @property EASE_QUINTIC
    * @type number[][]
    * @static
    * @final
     */
    this.EASE_QUINTIC = this.BY_INDEX[gs.EasingTypes.EASE_QUINTIC];

    /**
    * @property EASE_SINUSOIDAL
    * @type number[][]
    * @static
    * @final
     */
    this.EASE_SINUSOIDAL = this.BY_INDEX[gs.EasingTypes.EASE_SINUSOIDAL];

    /**
    * @property EASE_EXPONENTIAL
    * @type number[][]
    * @static
    * @final
     */
    this.EASE_EXPONENTIAL = this.BY_INDEX[gs.EasingTypes.EASE_EXPONENTIAL];

    /**
    * @property EASE_CIRCULAR
    * @type number[][]
    * @static
    * @final
     */
    this.EASE_CIRCULAR = this.BY_INDEX[gs.EasingTypes.EASE_CIRCULAR];

    /**
    * @property EASE_ELASTIC
    * @type number[][]
    * @static
    * @final
     */
    this.EASE_ELASTIC = this.BY_INDEX[gs.EasingTypes.EASE_ELASTIC];

    /**
    * @property EASE_BOUNCE
    * @type number[][]
    * @static
    * @final
     */
    this.EASE_BOUNCE = this.BY_INDEX[gs.EasingTypes.EASE_BOUNCE];

    /**
    * @property EASE_BACK
    * @type number[][]
    * @static
    * @final
     */
    return this.EASE_BACK = this.BY_INDEX[gs.EasingTypes.EASE_BACK];
  };


  /**
  * @method fromValues
  * @param {number} index - The index.
  * @param {number} inOut - The in-out value.
   */

  Easings.fromValues = function(index, inOut) {
    return gs.Easings.BY_INDEX[index][inOut];
  };


  /**
  * @method fromObject
  * @param {Object} obj - The easing data-object.
   */

  Easings.fromObject = function(obj, flags, defaults) {
    return gs.Easings.BY_INDEX[obj.type][obj.inOut];
  };


  /**
  * @method fromString
  * @param {String} s - The easing string like "quad_in" for example.
   */

  Easings.fromString = function(s) {
    return gs.Easings.BY_STRING[s || "linear_inout"];
  };

  return Easings;

})();

Easings.initialize();

gs.Easings = Easings;

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=Easings_68.js