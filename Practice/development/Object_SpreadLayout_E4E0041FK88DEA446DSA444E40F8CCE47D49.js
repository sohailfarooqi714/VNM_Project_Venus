// Generated by CoffeeScript 1.12.7
(function() {
  var Object_SpreadLayout,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Object_SpreadLayout = (function(superClass) {
    extend(Object_SpreadLayout, superClass);


    /**
    * A spread-layout which spreads all sub-objects evenly over the layout-space 
    * vertically or horizontally.
    *
    * @module ui
    * @class Object_SpreadLayout
    * @extends ui.Object_UIElement
    * @memberof ui
    * @constructor
     */

    function Object_SpreadLayout(x, y, width, height, orientation) {
      Object_SpreadLayout.__super__.constructor.call(this);
      this.dstRect.set(x || 0, y || 0, width || 1, height || 1);

      /**
      * Indicates if the layout is resizable.
      * @property resizable
      * @type boolean
       */
      this.resizable = false;

      /**
      * The UI object's animator-component to execute different kind of animations like move, rotate, etc. on it.
      * @property animator
      * @type gs.Component_Animator
       */
      this.animator = new gs.Animator();

      /**
      * The layout's sub-objects.
      * @property controls
      * @type ui.Object_UIElement[]
       */
      this.controls = [];

      /**
      * The spread-layout's orientation. 
      * @property orientation
      * @type gs.Orientation
       */
      this.orientation = orientation === "vertical" ? 1 : 0;

      /**
      * The behavior component to add spread-layout specific behavior.
      * @property behavior
      * @type gs.Component_SpreadLayoutBehavior
       */
      this.behavior = new gs.Component_SpreadLayoutBehavior();
      this.behavior.orientation = this.orientation;
      this.addComponent(this.behavior);
      this.addComponent(this.animator);
    }

    return Object_SpreadLayout;

  })(ui.Object_UIElement);

  ui.Object_SpreadLayout = Object_SpreadLayout;

}).call(this);
