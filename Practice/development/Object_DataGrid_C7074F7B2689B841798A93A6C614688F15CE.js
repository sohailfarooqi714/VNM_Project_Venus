// Generated by CoffeeScript 1.12.7
(function() {
  var Object_DataGrid,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Object_DataGrid = (function(superClass) {
    extend(Object_DataGrid, superClass);

    Object_DataGrid.accessors("zIndex", {
      set: function(v) {
        return this.zIndex_ = v;
      },
      get: function() {
        return (this.zIndex_ || 0) + (!this.parent ? 0 : this.parent.zIndex || 0);
      }
    });

    Object_DataGrid.accessors("scrollOffsetY", {
      set: function(v) {
        if (v !== this.scrollOffsetY_) {
          this.scrollOffsetY_ = v;
          return this.needsFullUpdate = true;
        }
      },
      get: function() {
        return this.scrollOffsetY_;
      }
    });


    /**
    * A data-grid allows to display items from a associated data-source using a specified item-template. 
    * Unlike a stack-layout, a data-grid is optimized to display even high amounts of items but they all
    * need to use the same item-template with same size.
    *
    * @module ui
    * @class Object_DataGrid
    * @extends ui.Object_UIElement
    * @memberof ui
    * @constructor
     */

    function Object_DataGrid(params) {
      Object_DataGrid.__super__.constructor.call(this);
      this.scrollOffsetY_ = 0;

      /**
      * The UI object's animator-component to execute different kind of animations like move, rotate, etc. on it.
      * @property animator
      * @type vn.Component_Animator
       */
      this.animator = new gs.Animator();

      /**
      * The behavior component to add free-layout specific behavior.
      * @property behavior
      * @type gs.Component_FreeLayoutBehavior
       */
      this.behavior = new ui.Component_DataGridBehavior(params);

      /**
      * Indicates if the layouts resizes to fit its content.
      * @property sizeToFit
      * @type boolean
       */
      this.sizeToFit = false;
      this.addComponent(this.behavior);
      this.addComponent(this.animator);
    }

    return Object_DataGrid;

  })(ui.Object_UIElement);

  ui.Object_DataGrid = Object_DataGrid;

}).call(this);
