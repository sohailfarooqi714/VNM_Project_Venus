// Generated by CoffeeScript 1.12.7
(function() {
  var Object_DomainContainer,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Object_DomainContainer = (function(superClass) {
    extend(Object_DomainContainer, superClass);


    /**
    * A game object which can contain other game objects by domain.
    *
    * @module gs
    * @class Object_DomainContainer
    * @extends gs.Object_Base
    * @memberof gs
    * @constructor
     */

    function Object_DomainContainer(disposeBehavior) {
      Object_DomainContainer.__super__.constructor.apply(this, arguments);

      /**
      * All sub-objects by domain. The default domain is an empty string.
      * @property subObjectsByDomain
      * @type Object
       */
      this.subObjectsByDomain = {
        "com.degica.vnm.default": this.subObjects
      };

      /**
      * The container's behavior component.
      * @property behavior
      * @type gs.Component_DomainContainer
       */
      this.behavior = new gs.Component_DomainContainer(disposeBehavior);
      this.addComponent(this.behavior);
    }

    return Object_DomainContainer;

  })(gs.Object_Base);

  gs.Object_DomainContainer = Object_DomainContainer;

}).call(this);
