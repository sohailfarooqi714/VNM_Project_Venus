{
    "uid": "841ADA0FKB9A3A4682S9645E705921611A32",
    "isLoaded": true,
    "lastModificationTime": 0,
    "items": {
        "name": "Component_Live2D",
        "type": "game_script",
        "order": 14,
        "parentId": "D3325122KACDEA4515SB731E37A42B9D779F",
        "folder": false,
        "content": "# ===================================================================\n#\n#   Script: Component_Live2D\n#\n#   $$COPYRIGHT$$\n#\n# ===================================================================\nclass Component_Live2D extends gs.Component\n    ###*\n    * A Live2D component which allows a game-object to become a animated\n    * Live2D character.\n    *\n    * @module vn\n    * @class Component_Live2D\n    * @extends gs.Component\n    * @memberof vn\n    * @constructor\n    ###\n    constructor: ->\n        super\n        \n        ###*\n        * The Live2D graphics object.\n        * @property l2dObject\n        * @type gs.Live2DObject\n        * @readOnly\n        ###\n        @l2dObject = null\n        \n        ###*\n        * The character's Live2D motion. Set name-property to an empty string\n        * to disable motion and use a generated default idle-motion.\n        * @property motion\n        * @type gs.Live2DMotion\n        * @default { name: \"\", loop: yes }\n        ###\n        @motion = name: \"\", loop: yes\n        \n        ###*\n        * The character's Live2D motion-group. Can be null\n        * @property motionGroup\n        * @type gs.Live2DMotionGroup\n        * @default null\n        ###\n        @motionGroup = null\n        \n        ###*\n        * The character's Live2D expression. Set name-property to an empty string\n        * to use default expression.\n        * @property expression\n        * @type gs.Live2DExpression\n        * @default { name: \"\" }\n        ###\n        @expression = name: \"\"\n        \n        ###*\n        * @property talkingDuration\n        * @type number\n        * @protected\n        ###\n        @talkingDuration = 1\n        \n        ###*\n        * @property talkingStep\n        * @type number\n        * @protected\n        ###\n        @talkingStep = 0\n        \n        ###*\n        * @property talkingStep\n        * @type number[]\n        * @protected\n        ###\n        @talkingSteps = [0, 0.5, 1]\n        \n    ###*\n    * Disposes the component and Live2D object.\n    *\n    * @method dispose\n    ###\n    dispose: ->\n        super\n        \n        @l2dObject.dispose()\n        \n    ###*\n    * Called if this object instance is restored from a data-bundle. It can be used\n    * re-assign event-handler, anonymous functions, etc.\n    * \n    * @method onDataBundleRestore.\n    * @param Object data - The data-bundle\n    * @param gs.ObjectCodecContext context - The codec-context.\n    ###\n    onDataBundleRestore: (data, context) ->\n        @expression = name: \"\"\n        @motion = name: \"\", loop: yes\n        @motionGroup = null\n        \n        @updateMotion()\n        @updateExpression()\n        @updateMotionGroup()\n     \n    ###*\n    * Setup the Live2D component. This method is automatically called by the\n    * system.\n    * @method setup\n    ###\n    setup: ->\n        @l2dObject = new gs.Live2DObject()\n        \n    ###*\n    * Updates the character's Live2D motion.\n    *\n    * @method updateMotion\n    ###          \n    updateMotion: ->\n        if @motion != @object.motion\n            @motion = @object.motion\n            if @motion.name\n                @l2dObject.playMotion(@motion.name, @motion.fadeInTime)\n                @l2dObject.loopMotion = @motion.loop\n    \n    ###*\n    * Updates the character's Live2D motion-group.\n    *\n    * @method updateMotionGroup\n    ###          \n    updateMotionGroup: ->\n        if @motionGroup != @object.motionGroup\n            @motionGroup = @object.motionGroup\n            if @motionGroup?.name\n                @l2dObject.playMotionGroup(@motionGroup.name, @motionGroup.playType)\n                @l2dObject.loopMotion = @motionGroup.loop\n    \n    ###*\n    * Updates the character's Live2D expression.\n    *\n    * @method updateExpression\n    ###              \n    updateExpression: ->\n        if @expression.name != @object.expression.name\n            @expression = @object.expression\n            @l2dObject.setExpression(@expression.name, @expression.fadeInTime)\n            \n    ###*\n    * Updates the Live2D object properties from the game object properties.\n    *\n    * @method updateProperties\n    ###        \n    updateProperties: ->\n        @l2dObject.model = @object.model\n        @object.dstRect.width = @l2dObject.width\n        @object.dstRect.height = @l2dObject.height\n        \n        @l2dObject.x = @object.dstRect.x + @object.offset.x\n        @l2dObject.y = @object.dstRect.y + @object.offset.y\n        @l2dObject.z = @object.zIndex\n        @l2dObject.visible = @object.visible\n        @l2dObject.opacity = @object.opacity\n        @l2dObject.zoomX = @object.zoom.x\n        @l2dObject.zoomY = @object.zoom.y\n        @l2dObject.anchor.x = @object.anchor.x\n        @l2dObject.anchor.y = @object.anchor.y\n        @l2dObject.angle = @object.angle\n        @l2dObject.tone = @object.tone\n        @l2dObject.color = @object.color\n        \n    ###*\n    * Updates the optional Live2D object properties from the game object properties.\n    *\n    * @method updateOptionalProperties\n    ###    \n    updateOptionalProperties: ->\n        if @object.viewport?\n            @l2dObject.viewport = @object.viewport\n        if @object.effects?\n            @l2dObject.effects = @object.effects\n            \n    ###*\n    * Updates the Live2D object and its talking-animation.\n    *\n    * @method update\n    ###   \n    update: ->\n        if @object.model? and not @object.model.initialized\n            @object.model.initialize()\n            \n        @updateProperties()\n        @updateMotion()\n        @updateMotionGroup()\n        @updateExpression()\n        @updateOptionalProperties()\n        @updateTalking()\n    \n    ###*\n    * Updates the Live2D character's talking-animation.\n    *\n    * @method update\n    ###       \n    updateTalking: ->\n        step = 0\n        if @object.talking\n            @l2dObject.talking = yes\n            if AudioManager.voice?\n                @l2dObject.talkingVolume = (AudioManager.voice.averageVolume || 0) / 100\n            else\n                @talkingDuration--\n                if @talkingDuration <= 0\n                    while @talkingStep == step\n                        step = Math.round(Math.random() * 2)\n                    @talkingDuration = 5\n                    @talkingStep = step\n                    @l2dObject.talkingVolume = @talkingSteps[step]\n        else\n            @l2dObject.talking = no\n \nvn.Component_Live2D = Component_Live2D       \ngs.Component_Live2D = Component_Live2D # Deprecated",
        "compiledContent": "// Generated by CoffeeScript 1.12.7\n(function() {\n  var Component_Live2D,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Component_Live2D = (function(superClass) {\n    extend(Component_Live2D, superClass);\n\n\n    /**\n    * A Live2D component which allows a game-object to become a animated\n    * Live2D character.\n    *\n    * @module vn\n    * @class Component_Live2D\n    * @extends gs.Component\n    * @memberof vn\n    * @constructor\n     */\n\n    function Component_Live2D() {\n      Component_Live2D.__super__.constructor.apply(this, arguments);\n\n      /**\n      * The Live2D graphics object.\n      * @property l2dObject\n      * @type gs.Live2DObject\n      * @readOnly\n       */\n      this.l2dObject = null;\n\n      /**\n      * The character's Live2D motion. Set name-property to an empty string\n      * to disable motion and use a generated default idle-motion.\n      * @property motion\n      * @type gs.Live2DMotion\n      * @default { name: \"\", loop: yes }\n       */\n      this.motion = {\n        name: \"\",\n        loop: true\n\n        /**\n        * The character's Live2D motion-group. Can be null\n        * @property motionGroup\n        * @type gs.Live2DMotionGroup\n        * @default null\n         */\n      };\n      this.motionGroup = null;\n\n      /**\n      * The character's Live2D expression. Set name-property to an empty string\n      * to use default expression.\n      * @property expression\n      * @type gs.Live2DExpression\n      * @default { name: \"\" }\n       */\n      this.expression = {\n        name: \"\"\n\n        /**\n        * @property talkingDuration\n        * @type number\n        * @protected\n         */\n      };\n      this.talkingDuration = 1;\n\n      /**\n      * @property talkingStep\n      * @type number\n      * @protected\n       */\n      this.talkingStep = 0;\n\n      /**\n      * @property talkingStep\n      * @type number[]\n      * @protected\n       */\n      this.talkingSteps = [0, 0.5, 1];\n    }\n\n\n    /**\n    * Disposes the component and Live2D object.\n    *\n    * @method dispose\n     */\n\n    Component_Live2D.prototype.dispose = function() {\n      Component_Live2D.__super__.dispose.apply(this, arguments);\n      return this.l2dObject.dispose();\n    };\n\n\n    /**\n    * Called if this object instance is restored from a data-bundle. It can be used\n    * re-assign event-handler, anonymous functions, etc.\n    * \n    * @method onDataBundleRestore.\n    * @param Object data - The data-bundle\n    * @param gs.ObjectCodecContext context - The codec-context.\n     */\n\n    Component_Live2D.prototype.onDataBundleRestore = function(data, context) {\n      this.expression = {\n        name: \"\"\n      };\n      this.motion = {\n        name: \"\",\n        loop: true\n      };\n      this.motionGroup = null;\n      this.updateMotion();\n      this.updateExpression();\n      return this.updateMotionGroup();\n    };\n\n\n    /**\n    * Setup the Live2D component. This method is automatically called by the\n    * system.\n    * @method setup\n     */\n\n    Component_Live2D.prototype.setup = function() {\n      return this.l2dObject = new gs.Live2DObject();\n    };\n\n\n    /**\n    * Updates the character's Live2D motion.\n    *\n    * @method updateMotion\n     */\n\n    Component_Live2D.prototype.updateMotion = function() {\n      if (this.motion !== this.object.motion) {\n        this.motion = this.object.motion;\n        if (this.motion.name) {\n          this.l2dObject.playMotion(this.motion.name, this.motion.fadeInTime);\n          return this.l2dObject.loopMotion = this.motion.loop;\n        }\n      }\n    };\n\n\n    /**\n    * Updates the character's Live2D motion-group.\n    *\n    * @method updateMotionGroup\n     */\n\n    Component_Live2D.prototype.updateMotionGroup = function() {\n      var ref;\n      if (this.motionGroup !== this.object.motionGroup) {\n        this.motionGroup = this.object.motionGroup;\n        if ((ref = this.motionGroup) != null ? ref.name : void 0) {\n          this.l2dObject.playMotionGroup(this.motionGroup.name, this.motionGroup.playType);\n          return this.l2dObject.loopMotion = this.motionGroup.loop;\n        }\n      }\n    };\n\n\n    /**\n    * Updates the character's Live2D expression.\n    *\n    * @method updateExpression\n     */\n\n    Component_Live2D.prototype.updateExpression = function() {\n      if (this.expression.name !== this.object.expression.name) {\n        this.expression = this.object.expression;\n        return this.l2dObject.setExpression(this.expression.name, this.expression.fadeInTime);\n      }\n    };\n\n\n    /**\n    * Updates the Live2D object properties from the game object properties.\n    *\n    * @method updateProperties\n     */\n\n    Component_Live2D.prototype.updateProperties = function() {\n      this.l2dObject.model = this.object.model;\n      this.object.dstRect.width = this.l2dObject.width;\n      this.object.dstRect.height = this.l2dObject.height;\n      this.l2dObject.x = this.object.dstRect.x + this.object.offset.x;\n      this.l2dObject.y = this.object.dstRect.y + this.object.offset.y;\n      this.l2dObject.z = this.object.zIndex;\n      this.l2dObject.visible = this.object.visible;\n      this.l2dObject.opacity = this.object.opacity;\n      this.l2dObject.zoomX = this.object.zoom.x;\n      this.l2dObject.zoomY = this.object.zoom.y;\n      this.l2dObject.anchor.x = this.object.anchor.x;\n      this.l2dObject.anchor.y = this.object.anchor.y;\n      this.l2dObject.angle = this.object.angle;\n      this.l2dObject.tone = this.object.tone;\n      return this.l2dObject.color = this.object.color;\n    };\n\n\n    /**\n    * Updates the optional Live2D object properties from the game object properties.\n    *\n    * @method updateOptionalProperties\n     */\n\n    Component_Live2D.prototype.updateOptionalProperties = function() {\n      if (this.object.viewport != null) {\n        this.l2dObject.viewport = this.object.viewport;\n      }\n      if (this.object.effects != null) {\n        return this.l2dObject.effects = this.object.effects;\n      }\n    };\n\n\n    /**\n    * Updates the Live2D object and its talking-animation.\n    *\n    * @method update\n     */\n\n    Component_Live2D.prototype.update = function() {\n      if ((this.object.model != null) && !this.object.model.initialized) {\n        this.object.model.initialize();\n      }\n      this.updateProperties();\n      this.updateMotion();\n      this.updateMotionGroup();\n      this.updateExpression();\n      this.updateOptionalProperties();\n      return this.updateTalking();\n    };\n\n\n    /**\n    * Updates the Live2D character's talking-animation.\n    *\n    * @method update\n     */\n\n    Component_Live2D.prototype.updateTalking = function() {\n      var step;\n      step = 0;\n      if (this.object.talking) {\n        this.l2dObject.talking = true;\n        if (AudioManager.voice != null) {\n          return this.l2dObject.talkingVolume = (AudioManager.voice.averageVolume || 0) / 100;\n        } else {\n          this.talkingDuration--;\n          if (this.talkingDuration <= 0) {\n            while (this.talkingStep === step) {\n              step = Math.round(Math.random() * 2);\n            }\n            this.talkingDuration = 5;\n            this.talkingStep = step;\n            return this.l2dObject.talkingVolume = this.talkingSteps[step];\n          }\n        }\n      } else {\n        return this.l2dObject.talking = false;\n      }\n    };\n\n    return Component_Live2D;\n\n  })(gs.Component);\n\n  vn.Component_Live2D = Component_Live2D;\n\n  gs.Component_Live2D = Component_Live2D;\n\n}).call(this);\n"
    },
    "summary": [
        "name",
        "type",
        "order"
    ],
    "externalItems": []
}