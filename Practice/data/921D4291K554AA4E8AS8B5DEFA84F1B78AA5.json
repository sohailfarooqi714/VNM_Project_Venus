{
    "uid": "921D4291K554AA4E8AS8B5DEFA84F1B78AA5",
    "isLoaded": true,
    "lastModificationTime": 0,
    "items": {
        "name": "Component_Animation",
        "type": "game_script",
        "order": 0,
        "parentId": "A8E9945CKEE5CA4855SAC81E480CB8098E0E",
        "folder": false,
        "content": "# ===================================================================\n#\n#   Script: Component_Animation\n#\n#   $$COPYRIGHT$$\n#\n# ===================================================================\nclass Component_Animation extends gs.Component\n    ###*\n    * The base-class of all animation components. An animation-component\n    * executes a certain animation on a game object. The type of the animation depends\n    * on the component. <br>\n    * <br>\n    * In regular, animation components a used together with the gs.Component_Animator\n    * component.\n    *\n    * @module gs\n    * @class Component_Animation\n    * @extends gs.Component\n    * @memberof gs\n    * @constructor\n    ###\n    constructor: ->\n        super\n        \n        @name = \"animation\"\n    \n    ###*\n    * Updates the animation. \n    *\n    * @method update\n    ###    \n    update: ->\n        @object.needsFullUpdate = yes\n     \n    ###*\n    * Skips the animation. That is used to skip an animation if the user\n    * wants to skip very fast through a visual novel scene.\n    *\n    * @method skip\n    ###    \n    skip: ->\n        if @easing?.duration > GameManager.tempSettings.skipTime\n            if GameManager.tempSettings.skipTime == 0\n                @easing.time = @easing.duration\n            else\n                @easing.duration = GameManager.tempSettings.skipTime\n                @easing.time = 0\n    \n    ###*\n    * Indicates if instant-skipping is enabled. In that case, there shouldn't be any delay and animation\n    * must finish immediately and call its callback. It is mostly used for live-preview purposes.\n    *\n    * @method isInstantSkip\n    * @return {boolean} If <b>true</b>, instant-skipping is enabled. Otherwise <b>false</b>.\n    ###                \n    isInstantSkip: -> GameManager.tempSettings.skip and GameManager.tempSettings.skipTime == 0\n        \n    \ngs.Component_Animation = Component_Animation",
        "compiledContent": "// Generated by CoffeeScript 1.12.7\n(function() {\n  var Component_Animation,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Component_Animation = (function(superClass) {\n    extend(Component_Animation, superClass);\n\n\n    /**\n    * The base-class of all animation components. An animation-component\n    * executes a certain animation on a game object. The type of the animation depends\n    * on the component. <br>\n    * <br>\n    * In regular, animation components a used together with the gs.Component_Animator\n    * component.\n    *\n    * @module gs\n    * @class Component_Animation\n    * @extends gs.Component\n    * @memberof gs\n    * @constructor\n     */\n\n    function Component_Animation() {\n      Component_Animation.__super__.constructor.apply(this, arguments);\n      this.name = \"animation\";\n    }\n\n\n    /**\n    * Updates the animation. \n    *\n    * @method update\n     */\n\n    Component_Animation.prototype.update = function() {\n      return this.object.needsFullUpdate = true;\n    };\n\n\n    /**\n    * Skips the animation. That is used to skip an animation if the user\n    * wants to skip very fast through a visual novel scene.\n    *\n    * @method skip\n     */\n\n    Component_Animation.prototype.skip = function() {\n      var ref;\n      if (((ref = this.easing) != null ? ref.duration : void 0) > GameManager.tempSettings.skipTime) {\n        if (GameManager.tempSettings.skipTime === 0) {\n          return this.easing.time = this.easing.duration;\n        } else {\n          this.easing.duration = GameManager.tempSettings.skipTime;\n          return this.easing.time = 0;\n        }\n      }\n    };\n\n\n    /**\n    * Indicates if instant-skipping is enabled. In that case, there shouldn't be any delay and animation\n    * must finish immediately and call its callback. It is mostly used for live-preview purposes.\n    *\n    * @method isInstantSkip\n    * @return {boolean} If <b>true</b>, instant-skipping is enabled. Otherwise <b>false</b>.\n     */\n\n    Component_Animation.prototype.isInstantSkip = function() {\n      return GameManager.tempSettings.skip && GameManager.tempSettings.skipTime === 0;\n    };\n\n    return Component_Animation;\n\n  })(gs.Component);\n\n  gs.Component_Animation = Component_Animation;\n\n}).call(this);\n"
    },
    "summary": [
        "name",
        "type",
        "order"
    ],
    "externalItems": []
}