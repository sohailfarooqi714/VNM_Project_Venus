{
    "uid": "4FB08FACK1FD1A483FSAB99E69479A78AA76",
    "isLoaded": true,
    "lastModificationTime": 0,
    "items": {
        "name": "Component_Visual",
        "type": "game_script",
        "order": 3,
        "parentId": "D3325122KACDEA4515SB731E37A42B9D779F",
        "folder": false,
        "content": "# ===================================================================\n#\n#   Script: Component_Visual\n#\n#   $$COPYRIGHT$$\n#\n# ===================================================================\nclass Component_Visual extends gs.Component\n    ###*\n    * The base class for all components displaying an object on screen.\n    * @module gs\n    * @class Component_Visual\n    * @extends gs.Component\n    * @memberof gs\n    * @constructor\n    ###\n    constructor: ->\n        super\n    \n    ###*\n    * Updates the origin-point of the game object.\n    * @method updateOrigin\n    ###\n    updateOrigin: ->\n        ox = 0\n        oy = 0\n        if @object.parent?\n            p = @object.parent\n            while p? and p.dstRect?\n                ox += p.dstRect.x + p.offset.x\n                oy += p.dstRect.y + p.offset.y\n                p = p.parent\n          \n        ox += @object.offset.x\n        oy += @object.offset.y\n\n        \n        @object.origin.x = ox\n        @object.origin.y = oy\n        \n      \n    ###*\n    * Updates the origin and the destination-rectangle from a layout-rectangle if present.\n    * @method update\n    ###\n    update: ->\n        super\n        @updateOrigin()\n        \n        \n        if @object.layoutRect? and @object.parent?.dstRect?\n            if @object.layoutRect.x then @object.dstRect.x = @object.layoutRect.x(@object.parent.dstRect.width)\n            if @object.layoutRect.y then @object.dstRect.y = @object.layoutRect.y(@object.parent.dstRect.height)\n            if @object.layoutRect.width then @object.dstRect.width = @object.layoutRect.width(@object.parent.dstRect.width)\n            if @object.layoutRect.height then @object.dstRect.height = @object.layoutRect.height(@object.parent.dstRect.height)\n\n\n\ngs.Component_Visual = Component_Visual",
        "compiledContent": "// Generated by CoffeeScript 1.12.7\n(function() {\n  var Component_Visual,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Component_Visual = (function(superClass) {\n    extend(Component_Visual, superClass);\n\n\n    /**\n    * The base class for all components displaying an object on screen.\n    * @module gs\n    * @class Component_Visual\n    * @extends gs.Component\n    * @memberof gs\n    * @constructor\n     */\n\n    function Component_Visual() {\n      Component_Visual.__super__.constructor.apply(this, arguments);\n    }\n\n\n    /**\n    * Updates the origin-point of the game object.\n    * @method updateOrigin\n     */\n\n    Component_Visual.prototype.updateOrigin = function() {\n      var ox, oy, p;\n      ox = 0;\n      oy = 0;\n      if (this.object.parent != null) {\n        p = this.object.parent;\n        while ((p != null) && (p.dstRect != null)) {\n          ox += p.dstRect.x + p.offset.x;\n          oy += p.dstRect.y + p.offset.y;\n          p = p.parent;\n        }\n      }\n      ox += this.object.offset.x;\n      oy += this.object.offset.y;\n      this.object.origin.x = ox;\n      return this.object.origin.y = oy;\n    };\n\n\n    /**\n    * Updates the origin and the destination-rectangle from a layout-rectangle if present.\n    * @method update\n     */\n\n    Component_Visual.prototype.update = function() {\n      var ref;\n      Component_Visual.__super__.update.apply(this, arguments);\n      this.updateOrigin();\n      if ((this.object.layoutRect != null) && (((ref = this.object.parent) != null ? ref.dstRect : void 0) != null)) {\n        if (this.object.layoutRect.x) {\n          this.object.dstRect.x = this.object.layoutRect.x(this.object.parent.dstRect.width);\n        }\n        if (this.object.layoutRect.y) {\n          this.object.dstRect.y = this.object.layoutRect.y(this.object.parent.dstRect.height);\n        }\n        if (this.object.layoutRect.width) {\n          this.object.dstRect.width = this.object.layoutRect.width(this.object.parent.dstRect.width);\n        }\n        if (this.object.layoutRect.height) {\n          return this.object.dstRect.height = this.object.layoutRect.height(this.object.parent.dstRect.height);\n        }\n      }\n    };\n\n    return Component_Visual;\n\n  })(gs.Component);\n\n  gs.Component_Visual = Component_Visual;\n\n}).call(this);\n"
    },
    "summary": [
        "name",
        "type",
        "order"
    ],
    "externalItems": []
}