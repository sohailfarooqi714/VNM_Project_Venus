{
    "uid": "284FE66765F1A843074B84639E12075940B7",
    "isLoaded": true,
    "lastModificationTime": 0,
    "items": {
        "name": "LayoutManagementMode",
        "type": "game_script",
        "order": 1,
        "parentId": "14495DE0KFF88A430DS90C9EE40D97139153",
        "folder": false,
        "content": "# ===================================================================\n#\n#   Script: LayoutManagementMode\n#\n#   $$COPYRIGHT$$\n#\n# ===================================================================\n\n###*\n* An enumeration of different management modes describing how a layout should\n* handle its sub-objects coming from a data-source.\n*\n* @module ui\n* @class LayoutManagementMode\n* @memberof ui\n* @constructor\n* @static\n* @final\n###\nclass LayoutManagementMode\n    @initialize: ->\n        ###*\n        * All sub-objects are created at setup time.\n        * @property NORMAL\n        * @type number\n        * @static\n        * @final\n        ###\n        @NORMAL = 0\n        \n        ###*\n        * The sub-objects are created at update time and only those which are currently visible.\n        * @property JUST_IN_TIME\n        * @type number\n        * @static\n        * @final\n        ###\n        @JUST_IN_TIME = 1\n    \n    ###*\n    * Gets the constant number value from a specified human-readable string.\n    * @method fromString\n    * @param {string} s - The management mode as string. Can be \"normal\" or \"just_in_time\".\n    * @return {number} The constant number value.\n    * @static\n    * @final\n    ###\n    @fromString: (s) ->\n        switch s\n            when \"normal\"\n                return 0\n            when \"just_in_time\"\n                return 1\n            else \n                return 0\n \nLayoutManagementMode.initialize()   \nui.LayoutManagementMode = LayoutManagementMode",
        "compiledContent": "// Generated by CoffeeScript 1.12.7\n\n/**\n* An enumeration of different management modes describing how a layout should\n* handle its sub-objects coming from a data-source.\n*\n* @module ui\n* @class LayoutManagementMode\n* @memberof ui\n* @constructor\n* @static\n* @final\n */\n\n(function() {\n  var LayoutManagementMode;\n\n  LayoutManagementMode = (function() {\n    function LayoutManagementMode() {}\n\n    LayoutManagementMode.initialize = function() {\n\n      /**\n      * All sub-objects are created at setup time.\n      * @property NORMAL\n      * @type number\n      * @static\n      * @final\n       */\n      this.NORMAL = 0;\n\n      /**\n      * The sub-objects are created at update time and only those which are currently visible.\n      * @property JUST_IN_TIME\n      * @type number\n      * @static\n      * @final\n       */\n      return this.JUST_IN_TIME = 1;\n    };\n\n\n    /**\n    * Gets the constant number value from a specified human-readable string.\n    * @method fromString\n    * @param {string} s - The management mode as string. Can be \"normal\" or \"just_in_time\".\n    * @return {number} The constant number value.\n    * @static\n    * @final\n     */\n\n    LayoutManagementMode.fromString = function(s) {\n      switch (s) {\n        case \"normal\":\n          return 0;\n        case \"just_in_time\":\n          return 1;\n        default:\n          return 0;\n      }\n    };\n\n    return LayoutManagementMode;\n\n  })();\n\n  LayoutManagementMode.initialize();\n\n  ui.LayoutManagementMode = LayoutManagementMode;\n\n}).call(this);\n"
    },
    "summary": [
        "name",
        "type"
    ],
    "externalItems": []
}