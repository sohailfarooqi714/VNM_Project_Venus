{
    "uid": "362DA4311419C4409E0955A931FFF05A5143",
    "isLoaded": true,
    "lastModificationTime": 0,
    "items": {
        "name": "Component_PixelateAnimation",
        "type": "game_script",
        "order": 15,
        "parentId": "A8E9945CKEE5CA4855SAC81E480CB8098E0E",
        "folder": false,
        "scriptType": 0,
        "content": "# ===================================================================\n#\n#   Script: Component_PixelateAnimation\n#\n#   $$COPYRIGHT$$\n#\n# ===================================================================\nclass Component_PixelateAnimation extends gs.Component_Animation\n    ###*\n    * Executes a pixelate-animation on a game-object.\n    *\n    * @module gs\n    * @class Component_PixelateAnimation\n    * @extends gs.Component_Animation\n    * @memberof gs\n    * @constructor\n    ###\n    constructor: (data) ->\n        super\n        \n        ###*\n        * The easing-object used for the animation.\n        * @property easing\n        * @type gs.Easing\n        ###\n        @widthEasing = new gs.Easing(null, data?.widthEasing)\n        @heightEasing = new gs.Easing(null, data?.heightEasing)\n        \n    ###*\n    * Updates the blend-animation.\n    *\n    * @method update\n    ###   \n    update: ->\n        super\n        if !@widthEasing.isRunning and !@heightEasing.isRunning then return\n\n        @widthEasing.updateValue()\n        @heightEasing.updateValue()\n        @object.effects.pixelate.width = @widthEasing.value\n        @object.effects.pixelate.height = @heightEasing.value\n        \n        if !@widthEasing.isRunning and !@heightEasing.isRunning\n            @callback?(@object, this)\n \n    ###*\n    * Starts the pixelate-animation.\n    *\n    * @method start\n    * @param {number} power The target power.\n    * @param {number} duration The duration in frames.\n    * @param {Object} easingType The easing-type.\n    * @param {function} [callback] An optional callback called if the animation is finished. \n    ###  \n    start: (width, height, duration, easingType, callback) ->\n        @callback = callback\n        @widthEasing.type = easingType || gs.Easings.EASE_LINEAR[gs.EasingTypes.EASE_IN]\n        @heightEasing.type = easingType || gs.Easings.EASE_LINEAR[gs.EasingTypes.EASE_IN]\n        if @object.effects.pixelate.width == width and @object.effects.pixelate.height == height then return @callback?(@object, this)\n        \n        if duration == 0 or @isInstantSkip()\n            @object.effects.pixelate.width = width\n            @object.effects.pixelate.height = height\n            @callback?(@object, this)\n        else\n            @widthEasing.startValue(@object.effects.pixelate.width, width - @object.effects.pixelate.width, duration)\n            @heightEasing.startValue(@object.effects.pixelate.height, height - @object.effects.pixelate.height, duration)\n        \ngs.Component_PixelateAnimation = Component_PixelateAnimation",
        "compiledContent": "// Generated by CoffeeScript 1.12.7\n(function() {\n  var Component_PixelateAnimation,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Component_PixelateAnimation = (function(superClass) {\n    extend(Component_PixelateAnimation, superClass);\n\n\n    /**\n    * Executes a pixelate-animation on a game-object.\n    *\n    * @module gs\n    * @class Component_PixelateAnimation\n    * @extends gs.Component_Animation\n    * @memberof gs\n    * @constructor\n     */\n\n    function Component_PixelateAnimation(data) {\n      Component_PixelateAnimation.__super__.constructor.apply(this, arguments);\n\n      /**\n      * The easing-object used for the animation.\n      * @property easing\n      * @type gs.Easing\n       */\n      this.widthEasing = new gs.Easing(null, data != null ? data.widthEasing : void 0);\n      this.heightEasing = new gs.Easing(null, data != null ? data.heightEasing : void 0);\n    }\n\n\n    /**\n    * Updates the blend-animation.\n    *\n    * @method update\n     */\n\n    Component_PixelateAnimation.prototype.update = function() {\n      Component_PixelateAnimation.__super__.update.apply(this, arguments);\n      if (!this.widthEasing.isRunning && !this.heightEasing.isRunning) {\n        return;\n      }\n      this.widthEasing.updateValue();\n      this.heightEasing.updateValue();\n      this.object.effects.pixelate.width = this.widthEasing.value;\n      this.object.effects.pixelate.height = this.heightEasing.value;\n      if (!this.widthEasing.isRunning && !this.heightEasing.isRunning) {\n        return typeof this.callback === \"function\" ? this.callback(this.object, this) : void 0;\n      }\n    };\n\n\n    /**\n    * Starts the pixelate-animation.\n    *\n    * @method start\n    * @param {number} power The target power.\n    * @param {number} duration The duration in frames.\n    * @param {Object} easingType The easing-type.\n    * @param {function} [callback] An optional callback called if the animation is finished.\n     */\n\n    Component_PixelateAnimation.prototype.start = function(width, height, duration, easingType, callback) {\n      this.callback = callback;\n      this.widthEasing.type = easingType || gs.Easings.EASE_LINEAR[gs.EasingTypes.EASE_IN];\n      this.heightEasing.type = easingType || gs.Easings.EASE_LINEAR[gs.EasingTypes.EASE_IN];\n      if (this.object.effects.pixelate.width === width && this.object.effects.pixelate.height === height) {\n        return typeof this.callback === \"function\" ? this.callback(this.object, this) : void 0;\n      }\n      if (duration === 0 || this.isInstantSkip()) {\n        this.object.effects.pixelate.width = width;\n        this.object.effects.pixelate.height = height;\n        return typeof this.callback === \"function\" ? this.callback(this.object, this) : void 0;\n      } else {\n        this.widthEasing.startValue(this.object.effects.pixelate.width, width - this.object.effects.pixelate.width, duration);\n        return this.heightEasing.startValue(this.object.effects.pixelate.height, height - this.object.effects.pixelate.height, duration);\n      }\n    };\n\n    return Component_PixelateAnimation;\n\n  })(gs.Component_Animation);\n\n  gs.Component_PixelateAnimation = Component_PixelateAnimation;\n\n}).call(this);\n"
    },
    "summary": [
        "name",
        "type"
    ],
    "externalItems": []
}