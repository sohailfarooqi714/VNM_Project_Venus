{
    "uid": "C49891BD5F4028431468E0A4176B6D7CFE92",
    "isLoaded": true,
    "lastModificationTime": 0,
    "items": {
        "name": "Object_IntervalTimer",
        "type": "game_script",
        "order": 18,
        "parentId": "A05E7029K45DBA459BSADF4EEC07A526241A",
        "folder": false,
        "scriptType": 0,
        "content": "# ===================================================================\n#\n#   Script: Object_IntervalTimer\n#\n#   $$COPYRIGHT$$\n#\n# ===================================================================\nclass Object_IntervalTimer extends gs.Object_Base\n    @objectCodecBlackList = [\"parent\"]\n    \n    ###*\n    * A timer object. A timer can be used as a regular timer or as a stop-watch.\n    *\n    * @module gs\n    * @class Object_IntervalTimer\n    * @extends gs.Object_Base\n    * @memberof gs\n    * @constructor\n    ###\n    constructor: ->\n        super()\n        \n        ###*\n        * A behavior-component to add timer-specific behavior to the object.\n        * @property behavior\n        * @type gs.Component_IntervalTimer\n        ###\n        @behavior = new gs.Component_IntervalTimer()\n        \n        ###*\n        * An event-emitter to emit events.\n        * @property events\n        * @type gs.Component_EventEmitter\n        ###\n        @events = new gs.EventEmitter()\n        \n        @addComponent(@events)\n        @addComponent(@behavior)\n        \ngs.Object_IntervalTimer = Object_IntervalTimer",
        "compiledContent": "// Generated by CoffeeScript 1.12.7\n(function() {\n  var Object_IntervalTimer,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Object_IntervalTimer = (function(superClass) {\n    extend(Object_IntervalTimer, superClass);\n\n    Object_IntervalTimer.objectCodecBlackList = [\"parent\"];\n\n\n    /**\n    * A timer object. A timer can be used as a regular timer or as a stop-watch.\n    *\n    * @module gs\n    * @class Object_IntervalTimer\n    * @extends gs.Object_Base\n    * @memberof gs\n    * @constructor\n     */\n\n    function Object_IntervalTimer() {\n      Object_IntervalTimer.__super__.constructor.call(this);\n\n      /**\n      * A behavior-component to add timer-specific behavior to the object.\n      * @property behavior\n      * @type gs.Component_IntervalTimer\n       */\n      this.behavior = new gs.Component_IntervalTimer();\n\n      /**\n      * An event-emitter to emit events.\n      * @property events\n      * @type gs.Component_EventEmitter\n       */\n      this.events = new gs.EventEmitter();\n      this.addComponent(this.events);\n      this.addComponent(this.behavior);\n    }\n\n    return Object_IntervalTimer;\n\n  })(gs.Object_Base);\n\n  gs.Object_IntervalTimer = Object_IntervalTimer;\n\n}).call(this);\n"
    },
    "summary": [
        "name",
        "type",
        "order"
    ],
    "externalItems": []
}