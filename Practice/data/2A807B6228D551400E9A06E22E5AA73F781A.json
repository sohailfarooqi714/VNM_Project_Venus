{
    "uid": "2A807B6228D551400E9A06E22E5AA73F781A",
    "isLoaded": true,
    "lastModificationTime": 0,
    "items": {
        "name": "Component_Live2DAnimation",
        "type": "game_script",
        "order": 16,
        "parentId": "A8E9945CKEE5CA4855SAC81E480CB8098E0E",
        "folder": false,
        "scriptType": 0,
        "content": "# ===================================================================\n#\n#   Script: Component_Live2DAnimation\n#\n#   $$COPYRIGHT$$\n#\n# ===================================================================\nclass Component_Live2DAnimation extends gs.Component_Animation\n    ###*\n    * Executes an animation on specific Live2D model-parameter of the Live2D  game-object.\n    *\n    * @module gs\n    * @class Component_Live2DAnimation\n    * @extends gs.Component_Animation\n    * @memberof gs\n    * @constructor\n    ###\n    constructor: (data) ->\n        super\n\n        ###*\n        * The easing-object used for the animation.\n        * @property easing\n        * @type gs.Easing\n        ###\n        @easing = new gs.Easing(null, data?.easing)\n        ###*\n        * The parameter name to animate.\n        * @property param\n        * @type string\n        ###\n        @param = \"\"\n\n    ###*\n    * Serializes the animation into a data-bundle.\n    *\n    * @method toDataBundle\n    ###\n    toDataBundle: ->\n        easing: @easing\n\n    ###*\n    * Updates the animation.\n    *\n    * @method update\n    ###\n    update: ->\n        super\n        if not @easing.isRunning then return\n\n        @easing.updateValue()\n        @object.visual.l2dObject.setParameter(@param, @easing.value)\n\n        if not @easing.isRunning\n            @callback?(@object, this)\n\n    ###*\n    * Starts the animation.\n    *\n    * @method start\n    * @param {string} param The name of the parameter to animate.\n    * @param {number} value The target value.\n    * @param {number} duration The duration in frames.\n    * @param {Object} easingType The easing-type.\n    * @param {function} [callback] An optional callback called if the animation has been finished.\n    ###\n    start: (param, value, duration, easingType, callback) ->\n        currentValue = @object.visual.l2dObject.getParameter(param)\n        @param = param\n        @callback = callback\n        @easing.type = easingType || gs.Easings.EASE_LINEAR[gs.EasingTypes.EASE_IN]\n        if currentValue == value then return @callback?(@object, this)\n\n        if duration == 0 or @isInstantSkip()\n            @object.visual.l2dObject.setParameter(param, value)\n            @callback?(@object, this)\n        else\n            @easing.startValue(currentValue, value - currentValue, duration)\n\ngs.Component_Live2DAnimation = Component_Live2DAnimation",
        "compiledContent": "// Generated by CoffeeScript 1.12.7\n(function() {\n  var Component_Live2DAnimation,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Component_Live2DAnimation = (function(superClass) {\n    extend(Component_Live2DAnimation, superClass);\n\n\n    /**\n    * Executes an animation on specific Live2D model-parameter of the Live2D  game-object.\n    *\n    * @module gs\n    * @class Component_Live2DAnimation\n    * @extends gs.Component_Animation\n    * @memberof gs\n    * @constructor\n     */\n\n    function Component_Live2DAnimation(data) {\n      Component_Live2DAnimation.__super__.constructor.apply(this, arguments);\n\n      /**\n      * The easing-object used for the animation.\n      * @property easing\n      * @type gs.Easing\n       */\n      this.easing = new gs.Easing(null, data != null ? data.easing : void 0);\n\n      /**\n      * The parameter name to animate.\n      * @property param\n      * @type string\n       */\n      this.param = \"\";\n    }\n\n\n    /**\n    * Serializes the animation into a data-bundle.\n    *\n    * @method toDataBundle\n     */\n\n    Component_Live2DAnimation.prototype.toDataBundle = function() {\n      return {\n        easing: this.easing\n      };\n    };\n\n\n    /**\n    * Updates the animation.\n    *\n    * @method update\n     */\n\n    Component_Live2DAnimation.prototype.update = function() {\n      Component_Live2DAnimation.__super__.update.apply(this, arguments);\n      if (!this.easing.isRunning) {\n        return;\n      }\n      this.easing.updateValue();\n      this.object.visual.l2dObject.setParameter(this.param, this.easing.value);\n      if (!this.easing.isRunning) {\n        return typeof this.callback === \"function\" ? this.callback(this.object, this) : void 0;\n      }\n    };\n\n\n    /**\n    * Starts the animation.\n    *\n    * @method start\n    * @param {string} param The name of the parameter to animate.\n    * @param {number} value The target value.\n    * @param {number} duration The duration in frames.\n    * @param {Object} easingType The easing-type.\n    * @param {function} [callback] An optional callback called if the animation has been finished.\n     */\n\n    Component_Live2DAnimation.prototype.start = function(param, value, duration, easingType, callback) {\n      var currentValue;\n      currentValue = this.object.visual.l2dObject.getParameter(param);\n      this.param = param;\n      this.callback = callback;\n      this.easing.type = easingType || gs.Easings.EASE_LINEAR[gs.EasingTypes.EASE_IN];\n      if (currentValue === value) {\n        return typeof this.callback === \"function\" ? this.callback(this.object, this) : void 0;\n      }\n      if (duration === 0 || this.isInstantSkip()) {\n        this.object.visual.l2dObject.setParameter(param, value);\n        return typeof this.callback === \"function\" ? this.callback(this.object, this) : void 0;\n      } else {\n        return this.easing.startValue(currentValue, value - currentValue, duration);\n      }\n    };\n\n    return Component_Live2DAnimation;\n\n  })(gs.Component_Animation);\n\n  gs.Component_Live2DAnimation = Component_Live2DAnimation;\n\n}).call(this);\n"
    },
    "summary": [
        "name",
        "type"
    ],
    "externalItems": []
}