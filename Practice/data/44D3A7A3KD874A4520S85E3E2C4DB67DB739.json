{
    "uid": "44D3A7A3KD874A4520S85E3E2C4DB67DB739",
    "isLoaded": true,
    "lastModificationTime": 0,
    "items": {
        "name": "Constants",
        "type": "game_script",
        "order": 0,
        "parentId": "A588F305KAB2DA4236SB838E7FF9BBA890FD",
        "folder": false,
        "content": "class DesktopUIConstants\n    @OPTION_BUTTON_W = 78\n    @OPTION_BUTTON_H = 78\n    @OPTION_BUTTON_L_IMAGE_ON = \"m-diamond-large-on\"\n    @OPTION_BUTTON_L_IMAGE_OFF = \"m-diamond-large-off\"\n    @OPTION_BUTTON_S_IMAGE_ON = \"m-diamond-small-on\"\n    @OPTION_BUTTON_S_IMAGE_OFF = \"m-diamond-small-off\"\n    @OPTION_BUTTON_MSG_IMAGE_ON = \"msg-diamond-small-on\"\n    @OPTION_BUTTON_MSG_IMAGE_OFF = \"msg-diamond-small-off\"\n    @SLIDER_TRACK_H = 3\n    @TEXT_SIZE_SMALL = 20\n    @TEXT_SIZE_MESSAGE = 30\n    @TEXT_SIZE_MESSAGE_NAME = 25\n    @LAYOUT_SETTINGS_WINDOW_X = 20\n    @LAYOUT_SETTINGS_WINDOW_W = 630\n    @LAYOUT_SETTINGS_VOICES_WINDOW_X = 720\n    @LAYOUT_SETTINGS_VOICES_WINDOW_W = 540\n    @LAYOUT_SETTINGS_WINDOW_LABEL_W = 80\n    @CG_GALLERY_CONTENT_WIDTH = Math.floor((Graphics.width-260-(Graphics.width - (Graphics.width - 200))) / 175) * 175 + 20\n    @MESSAGE_BOX_IDS = [\"messageBox\", \"nvlMessageBox\"]\n\nclass Helper\n    ###*\n    * A helper class containing helper-functions like generating letter-descriptors\n    * from database defined text-input pages.\n    *\n    * @module ui\n    * @class Helper\n    * @memberof ui\n    * @constructor\n    ###\n    constructor: ->\n        \n    ###*\n    * Generates the text-input pages from database.\n    *\n    * @method generateTextInputPages\n    * @return Object[] - Array of text-input pages. Each page is an array of ui.Letter descriptors.\n    ###\n    generateTextInputPages: () ->\n        pages = []\n        defaults = [\n            \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"abcdefghijklmnopqrstuvwxyz\",\n            \"0123456789\", \"\"\n        ]\n        \n        try\n            charsets = RecordManager.system.textInputPages.select (p) -> lcs(p)\n        catch\n            charsets = defaults\n            \n        for i in [0...charsets.length]\n            charsets[i] = charsets[i] ? defaults[i]||\"\"\n            \n        for charset in charsets\n            pages.push(@generateTextInputPage(charset))\n            \n        return pages\n      \n    ###*\n    * Generates an array of ui.Letter descriptors from the specified charset.\n    *\n    * @method generateTextInputPage\n    * @param {string} charset - The charset to generate the ui.Letter descriptors from.\n    * @return Object[] - Array of ui.Letter descriptors.\n    ###      \n    generateTextInputPage: (charset) ->\n        controls = []\n        \n        for c in charset\n            letter = { \"type\": \"ui.Letter\", \"params\": { \"text\": c, \"target\": new ui.Formula(-> 'textField.textInput') } }\n            controls.push(letter)\n            \n        return controls\n      \nui.Helper = new Helper()  \ngs.DesktopUIConstants = DesktopUIConstants\ngs.UIConstants = DesktopUIConstants",
        "compiledContent": "// Generated by CoffeeScript 1.12.7\n(function() {\n  var DesktopUIConstants, Helper;\n\n  DesktopUIConstants = (function() {\n    function DesktopUIConstants() {}\n\n    DesktopUIConstants.OPTION_BUTTON_W = 78;\n\n    DesktopUIConstants.OPTION_BUTTON_H = 78;\n\n    DesktopUIConstants.OPTION_BUTTON_L_IMAGE_ON = \"m-diamond-large-on\";\n\n    DesktopUIConstants.OPTION_BUTTON_L_IMAGE_OFF = \"m-diamond-large-off\";\n\n    DesktopUIConstants.OPTION_BUTTON_S_IMAGE_ON = \"m-diamond-small-on\";\n\n    DesktopUIConstants.OPTION_BUTTON_S_IMAGE_OFF = \"m-diamond-small-off\";\n\n    DesktopUIConstants.OPTION_BUTTON_MSG_IMAGE_ON = \"msg-diamond-small-on\";\n\n    DesktopUIConstants.OPTION_BUTTON_MSG_IMAGE_OFF = \"msg-diamond-small-off\";\n\n    DesktopUIConstants.SLIDER_TRACK_H = 3;\n\n    DesktopUIConstants.TEXT_SIZE_SMALL = 20;\n\n    DesktopUIConstants.TEXT_SIZE_MESSAGE = 30;\n\n    DesktopUIConstants.TEXT_SIZE_MESSAGE_NAME = 25;\n\n    DesktopUIConstants.LAYOUT_SETTINGS_WINDOW_X = 20;\n\n    DesktopUIConstants.LAYOUT_SETTINGS_WINDOW_W = 630;\n\n    DesktopUIConstants.LAYOUT_SETTINGS_VOICES_WINDOW_X = 720;\n\n    DesktopUIConstants.LAYOUT_SETTINGS_VOICES_WINDOW_W = 540;\n\n    DesktopUIConstants.LAYOUT_SETTINGS_WINDOW_LABEL_W = 80;\n\n    DesktopUIConstants.CG_GALLERY_CONTENT_WIDTH = Math.floor((Graphics.width - 260 - (Graphics.width - (Graphics.width - 200))) / 175) * 175 + 20;\n\n    DesktopUIConstants.MESSAGE_BOX_IDS = [\"messageBox\", \"nvlMessageBox\"];\n\n    return DesktopUIConstants;\n\n  })();\n\n  Helper = (function() {\n\n    /**\n    * A helper class containing helper-functions like generating letter-descriptors\n    * from database defined text-input pages.\n    *\n    * @module ui\n    * @class Helper\n    * @memberof ui\n    * @constructor\n     */\n    function Helper() {}\n\n\n    /**\n    * Generates the text-input pages from database.\n    *\n    * @method generateTextInputPages\n    * @return Object[] - Array of text-input pages. Each page is an array of ui.Letter descriptors.\n     */\n\n    Helper.prototype.generateTextInputPages = function() {\n      var charset, charsets, defaults, i, j, k, len, pages, ref, ref1;\n      pages = [];\n      defaults = [\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"abcdefghijklmnopqrstuvwxyz\", \"0123456789\", \"\"];\n      try {\n        charsets = RecordManager.system.textInputPages.select(function(p) {\n          return lcs(p);\n        });\n      } catch (error) {\n        charsets = defaults;\n      }\n      for (i = j = 0, ref = charsets.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        charsets[i] = (ref1 = charsets[i]) != null ? ref1 : defaults[i] || \"\";\n      }\n      for (k = 0, len = charsets.length; k < len; k++) {\n        charset = charsets[k];\n        pages.push(this.generateTextInputPage(charset));\n      }\n      return pages;\n    };\n\n\n    /**\n    * Generates an array of ui.Letter descriptors from the specified charset.\n    *\n    * @method generateTextInputPage\n    * @param {string} charset - The charset to generate the ui.Letter descriptors from.\n    * @return Object[] - Array of ui.Letter descriptors.\n     */\n\n    Helper.prototype.generateTextInputPage = function(charset) {\n      var c, controls, j, len, letter;\n      controls = [];\n      for (j = 0, len = charset.length; j < len; j++) {\n        c = charset[j];\n        letter = {\n          \"type\": \"ui.Letter\",\n          \"params\": {\n            \"text\": c,\n            \"target\": new ui.Formula(function() {\n              return 'textField.textInput';\n            })\n          }\n        };\n        controls.push(letter);\n      }\n      return controls;\n    };\n\n    return Helper;\n\n  })();\n\n  ui.Helper = new Helper();\n\n  gs.DesktopUIConstants = DesktopUIConstants;\n\n  gs.UIConstants = DesktopUIConstants;\n\n}).call(this);\n"
    },
    "summary": [
        "name",
        "type"
    ],
    "externalItems": []
}